#! /bin/sh
curdir=$(dirname $0)

echo '#ifndef CONFIGURE_H' >"$curdir/configure.h"
echo '#define CONFIGURE_H' >>"$curdir/configure.h"

printf "%b" "Looking for compiler... "
[ -z "$CC" ] && CC=gcc
which $CC >/dev/null 2>&1 || CC=clang
which $CC >/dev/null 2>&1 || CC=cc
echo "$CC"

LDLIBS=''
DEFINES_STR='uses:'
CFLAGS=''
COMPRESS_ZSTD=''

srcfile=$(mktemp)
mv $srcfile $srcfile.c
trap "rm -f $srcfile.c" INT HUP EXIT

printf "%b" "Checking if compiler can create executables... "
cat >$srcfile.c <<EOF
int main(void) { return 0; }
EOF
if $CC $srcfile.c -o /dev/null >/dev/null 2>&1; then
    echo "yes"
else
    echo "no"
    echo
    echo "Please ensure you have a working C compiler and relaunch configure."
    exit 1
fi

printf "%b" "Looking for libzstd... "
cat >$srcfile.c <<EOF
#include <zstd.h>
int main(void) { ZSTD_CStream *c = ZSTD_createCStream(); ZSTD_initCStream(c, 3); ZSTD_freeCStream(c); return 0; }
EOF
if [ "$NO_ZSTD" != 1 ] && $CC $srcfile.c -L/usr/local/lib -I/usr/local/include -lzstd -o /dev/null >/dev/null 2>&1; then
    echo "yes"
    echo '#define HAVE_zstd' >>"$curdir/configure.h"
    COMPRESS_ZSTD='compress_zstd.c'
    printf "%b" "Checking whether we can link zstd statically... "
    libzstda=$($CC -print-file-name=libzstd.a 2>/dev/null)
    if [ -n "$libzstda" ] && [ -f "$libzstda" ] && [ "$NO_STATIC_ZSTD" != 1 ]; then
        echo "yes"
        DEFINES_STR="$DEFINES_STR zstd[static]"
        LDLIBS="$LDLIBS $libzstda"
    else
        echo "no"
        DEFINES_STR="$DEFINES_STR zstd"
        LDLIBS="$LDLIBS -lzstd"
    fi
else
    echo "no"
fi

printf "%b" "Looking for isastream()... "
cat >$srcfile.c <<EOF
#include <stropts.h>
int main(void) { return isastream(0); }
EOF
if $CC $srcfile.c -o /dev/null >/dev/null 2>&1; then
    echo "yes"
    echo '#define HAVE_isastream' >>"$curdir/configure.h"
    DEFINES_STR="$DEFINES_STR isastream"
else
    echo "no"
fi

printf "%b" "Looking for cfmakeraw()... "
cat >$srcfile.c <<EOF
#include <termios.h>
#include <unistd.h>
int main(void) { cfmakeraw(0); return 0; }
EOF
if $CC $srcfile.c -o /dev/null >/dev/null 2>&1; then
    echo "yes"
    echo '#define HAVE_cfmakeraw' >>"$curdir/configure.h"
    DEFINES_STR="$DEFINES_STR cfmakeraw"
else
    echo "no"
fi

printf "%b" "Looking for getpt()... "
cat >$srcfile.c <<EOF
#include <stdlib.h>
int main(void) { return getpt(); }
EOF
if $CC $srcfile.c -o /dev/null >/dev/null 2>&1; then
    echo "yes"
    echo '#define HAVE_getpt' >>"$curdir/configure.h"
    DEFINES_STR="$DEFINES_STR getpt"
else
    echo "no"
fi

printf "%b" "Looking for posix_openpt()... "
cat >$srcfile.c <<EOF
#include <stdlib.h>
#include <fcntl.h>
int main(void) { return posix_openpt(0); }
EOF
if $CC $srcfile.c -o /dev/null >/dev/null 2>&1; then
    echo "yes"
    echo '#define HAVE_posix_openpt' >>"$curdir/configure.h"
    DEFINES_STR="$DEFINES_STR posix_openpt"
else
    echo "no"
fi

printf "%b" "Looking for grantpt()... "
cat >$srcfile.c <<EOF
#include <stdlib.h>
int main(void) { (void)ptsname(0); return grantpt(0) + unlockpt(0); }
EOF
if $CC $srcfile.c -o /dev/null >/dev/null 2>&1; then
    echo "yes"
    echo '#define HAVE_grantpt' >>"$curdir/configure.h"
    DEFINES_STR="$DEFINES_STR grantpt"
else
    echo "no"
fi

printf "%b" "Looking for openpty()... "
cat >$srcfile.c <<EOF
#include <pty.h>
int main(void) { return openpty(0, 0, 0, 0, 0); }
EOF
if $CC $srcfile.c -lutil -o /dev/null >/dev/null 2>&1; then
    echo "yes (pty.h)"
    LDLIBS="$LDLIBS -lutil"
    echo '#define HAVE_openpty' >>"$curdir/configure.h"
    echo '#define HAVE_openpty_pty_h' >>"$curdir/configure.h"
    DEFINES_STR="$DEFINES_STR openpty[pty.h]"
else
    cat >$srcfile.c <<EOF
#include <util.h>
int main(void) { return openpty(0, 0, 0, 0, 0); }
EOF
    if $CC $srcfile.c -lutil -o /dev/null >/dev/null 2>&1; then
        echo "yes (util.h)"
        LDLIBS="$LDLIBS -lutil"
        echo '#define HAVE_openpty' >>"$curdir/configure.h"
        echo '#define HAVE_openpty_util_h' >>"$curdir/configure.h"
        DEFINES_STR="$DEFINES_STR openpty[util.h]"
    else
        cat >$srcfile.c <<EOF
#include <libutil.h>
int main(void) { return openpty(0, 0, 0, 0, 0); }
EOF
        if $CC $srcfile.c -lutil -o /dev/null >/dev/null 2>&1; then
            echo "yes (libutil.h)"
            LDLIBS="$LDLIBS -lutil"
            echo '#define HAVE_openpty' >>"$curdir/configure.h"
            echo '#define HAVE_openpty_libutil_h' >>"$curdir/configure.h"
            DEFINES_STR="$DEFINES_STR openpty[libutil.h]"
        else
            echo "no"
        fi
    fi
fi

echo "Checking for supported compiler options..."
for w in -Wall -Wextra -pedantic -Wno-unused-result -Wbad-function-cast -Wmissing-declarations \
    -Wmissing-prototypes -Wnested-externs -Wold-style-definition -Wstrict-prototypes \
    -Wpointer-sign -Wmissing-parameter-type -Wold-style-declaration -Werror -Wl,--as-needed
do
    [ "$w" = "-Wl,--as-needed" ] && [ "$CC" != "gcc" ] && continue
    echo 'int main(void) { return 0; }' >$srcfile.c
    if [ $($CC $srcfile.c $w -o /dev/null 2>&1 | wc -l) = 0 ]; then
        echo "... OK $w"
        CFLAGS="$CFLAGS $w"
    else
        echo "... unsupported $w"
    fi
done

sed "s:%CC%:$CC:g;s:%LDLIBS%:$LDLIBS:g;s:%CFLAGS%:$CFLAGS:;s:%COMPRESS_ZSTD%:$COMPRESS_ZSTD:" $(dirname $0)/Makefile.in > $(dirname $0)/Makefile

cat >>"$curdir/configure.h" <<EOF
#define DEFINES_STR "$DEFINES_STR"
#define COMPILER_NAME "$CC"
#endif
EOF

echo
echo "You may run make now"
